[{"C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\index.js":"1","C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\App.js":"2","C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\components\\Nav.js":"4","C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\components\\Content.js":"6","C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\components\\TotalData.js":"7","C:\\Users\\rlatj\\Desktop\\현이폴더\\darkweb\\DarkWebCrawling\\frontend\\src\\index.js":"8","C:\\Users\\rlatj\\Desktop\\현이폴더\\darkweb\\DarkWebCrawling\\frontend\\src\\App.js":"9","C:\\Users\\rlatj\\Desktop\\현이폴더\\darkweb\\DarkWebCrawling\\frontend\\src\\reportWebVitals.js":"10","C:\\Users\\rlatj\\Desktop\\현이폴더\\darkweb\\DarkWebCrawling\\frontend\\src\\components\\Nav.js":"11","C:\\Users\\rlatj\\Desktop\\현이폴더\\darkweb\\DarkWebCrawling\\frontend\\src\\components\\Footer.js":"12","C:\\Users\\rlatj\\Desktop\\현이폴더\\darkweb\\DarkWebCrawling\\frontend\\src\\components\\Content.js":"13","C:\\Users\\rlatj\\Desktop\\현이폴더\\darkweb\\DarkWebCrawling\\frontend\\src\\components\\TotalData.js":"14","C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\components\\ContinentButton.js":"15","C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\components\\DateButton.js":"16","C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\redux\\actions\\continent.js":"17","C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\redux\\actions\\date.js":"18","C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\redux\\reducers\\totalDataStore.js":"19","C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\components\\DataTable.js":"20","C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\components\\LineGraph.js":"21","C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\javascripts\\DataSearch.js":"22"},{"size":775,"mtime":1613377970391,"results":"23","hashOfConfig":"24"},{"size":397,"mtime":1613490682461,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1611032175712,"results":"26","hashOfConfig":"24"},{"size":1192,"mtime":1613490682465,"results":"27","hashOfConfig":"24"},{"size":136,"mtime":1611032175704,"results":"28","hashOfConfig":"24"},{"size":555,"mtime":1612219530791,"results":"29","hashOfConfig":"24"},{"size":788,"mtime":1613488703400,"results":"30","hashOfConfig":"24"},{"size":519,"mtime":1611490792856,"results":"31","hashOfConfig":"32"},{"size":397,"mtime":1611894440192,"results":"33","hashOfConfig":"32"},{"size":375,"mtime":1611032175712,"results":"34","hashOfConfig":"32"},{"size":1192,"mtime":1611032175706,"results":"35","hashOfConfig":"32"},{"size":136,"mtime":1611032175704,"results":"36","hashOfConfig":"32"},{"size":553,"mtime":1612161792462,"results":"37","hashOfConfig":"32"},{"size":1990,"mtime":1612166501430,"results":"38","hashOfConfig":"32"},{"size":4913,"mtime":1613398055007,"results":"39","hashOfConfig":"24"},{"size":2272,"mtime":1613397510071,"results":"40","hashOfConfig":"24"},{"size":1081,"mtime":1613376794110,"results":"41","hashOfConfig":"24"},{"size":548,"mtime":1613375974632,"results":"42","hashOfConfig":"24"},{"size":1380,"mtime":1613377911567,"results":"43","hashOfConfig":"24"},{"size":2580,"mtime":1613488701072,"results":"44","hashOfConfig":"24"},{"size":3051,"mtime":1613488701617,"results":"45","hashOfConfig":"24"},{"size":11133,"mtime":1613488702806,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"zne669",{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m5lu7p",{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"49"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\index.js",[],["95","96"],"C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\App.js",["97","98","99","100"],"C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\components\\Nav.js",["101"],"C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\components\\Content.js",[],"C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\components\\TotalData.js",[],"C:\\Users\\rlatj\\Desktop\\현이폴더\\darkweb\\DarkWebCrawling\\frontend\\src\\index.js",[],"C:\\Users\\rlatj\\Desktop\\현이폴더\\darkweb\\DarkWebCrawling\\frontend\\src\\App.js",["102","103","104","105"],"C:\\Users\\rlatj\\Desktop\\현이폴더\\darkweb\\DarkWebCrawling\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\rlatj\\Desktop\\현이폴더\\darkweb\\DarkWebCrawling\\frontend\\src\\components\\Nav.js",["106"],"C:\\Users\\rlatj\\Desktop\\현이폴더\\darkweb\\DarkWebCrawling\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\rlatj\\Desktop\\현이폴더\\darkweb\\DarkWebCrawling\\frontend\\src\\components\\Content.js",[],"C:\\Users\\rlatj\\Desktop\\현이폴더\\darkweb\\DarkWebCrawling\\frontend\\src\\components\\TotalData.js",["107","108","109"],"C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\components\\ContinentButton.js",[],"C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\components\\DateButton.js",[],"C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\redux\\actions\\continent.js",[],"C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\redux\\actions\\date.js",[],"C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\redux\\reducers\\totalDataStore.js",[],"C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\components\\DataTable.js",["110","111"],"import { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function DataTable(tableDataArray) {\r\n    \r\n    const selectedData = useSelector((store) => store.search);\r\n\r\n    useEffect(() => {   \r\n\r\n\r\n        let html = '';\r\n        const tableThead = document.getElementById('totalDataThead');\r\n        const tableTbody = document.getElementById('totalDataTbody');\r\n        const weapon_kind = ['전체 거래', '무기', '마약', '해킹', '포르노'];\r\n        const dataGrowthRateName = ['전 일 대비 성장률', '전 주 대비 성장률', '전 월 대비 성장률', '전 년 대비 성장률'];\r\n        let dataGrowthRateNum = 3;\r\n        \r\n        if(selectedData.date === 'Year'){\r\n            dataGrowthRateNum = 3;\r\n        }\r\n        else if(selectedData.date === 'Month'){\r\n            dataGrowthRateNum = 2;\r\n        }\r\n        else if(selectedData.date === 'Week'){\r\n            dataGrowthRateNum = 1;\r\n        }\r\n        else if(selectedData.date === 'Day'){\r\n            dataGrowthRateNum = 0;\r\n        }\r\n      \r\n        html +=  `<td>불법 거래 종류</td>\r\n                  <td className=\"total-data_table_center-td\">불법 거래량</td>\r\n                  <td>${dataGrowthRateName[dataGrowthRateNum]}</td>`;\r\n    \r\n        tableThead.innerHTML = html;\r\n        html = '';\r\n\r\n        for(let tbodyTrCreateNum = 0, dataCnt = 0; tbodyTrCreateNum < weapon_kind.length; tbodyTrCreateNum++, dataCnt += 2){\r\n            html += `<tr>\r\n                        <td>${weapon_kind[tbodyTrCreateNum]}</td>\r\n                        <td class=\"total-data_table_center-td\">${tableDataArray[dataCnt]}</td>`;\r\n                    if(tableDataArray[dataCnt + 1] == Infinity || isNaN(tableDataArray[dataCnt + 1])){\r\n                        html += `<td>0%</td>`;\r\n                    }\r\n                    else{\r\n                        if(tableDataArray[dataCnt + 1] < 0){\r\n                            html += `<td>${tableDataArray[dataCnt + 1]}%</td>`;\r\n                        }\r\n                        else{\r\n                            html += `<td>+${tableDataArray[dataCnt + 1]}%</td>`;\r\n                        }\r\n                    }\r\n                    \r\n            html += `</tr>`;\r\n        }\r\n\r\n        tableTbody.innerHTML = html;\r\n\r\n    }, [tableDataArray]);\r\n\r\n    return(\r\n        <table className=\"total-data_table\">\r\n            <thead >\r\n            <tr id=\"totalDataThead\">\r\n            </tr>\r\n            </thead>\r\n            <tbody id=\"totalDataTbody\">\r\n            </tbody>\r\n        </table>\r\n    );\r\n}","C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\components\\LineGraph.js",["112"],"import { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Chart } from 'react-chartjs-2';\r\n\r\nexport default function LineGraph(graphDataArray, pastDay, nowDay) { \r\n\r\n    const selectedData = useSelector((store) => store.search);\r\n    \r\n    useEffect(() => {\r\n        const context = document.getElementById('myChart');\r\n        new Chart(context,{\r\n            type: 'line',\r\n            data: {\r\n                labels: [ pastDay, nowDay], \r\n                datasets: [\r\n                {\r\n                    label: '전체',\r\n                    backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n                    borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                    borderWidth: 3,\r\n                    data: [graphDataArray[0], graphDataArray[1]],\r\n                    fill: false\r\n                },\r\n                {\r\n                    label: '무기',\r\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n                    borderColor: 'rgba(54, 162, 235, 0.2)',\r\n                    borderWidth: 3,\r\n                    data: [graphDataArray[2], graphDataArray[3]],\r\n                    fill: false\r\n                },\r\n                {\r\n                    label: '마약',\r\n                    backgroundColor: 'rgba(255, 206, 86, 0.2)',\r\n                    borderColor: 'rgba(255, 206, 86, 0.2)',\r\n                    borderWidth: 3,\r\n                    data: [graphDataArray[4], graphDataArray[5]],\r\n                    fill: false\r\n                },\r\n                {\r\n                    label: '해킹',\r\n                    backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                    borderColor: 'rgba(75, 192, 192, 0.2)',\r\n                    borderWidth: 3,\r\n                    data: [graphDataArray[6], graphDataArray[7]],\r\n                    fill: false\r\n                },\r\n                {\r\n                    label: '포르노',\r\n                    backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n                    borderColor: 'rgba(153, 102, 255, 0.2)',\r\n                    borderWidth: 3,\r\n                    data: [graphDataArray[8], graphDataArray[9]],\r\n                    fill: false\r\n                },\r\n            ]\r\n            },\r\n            options: {\r\n                responsive: false,\r\n                scales: {\r\n                    xAxes: [{\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: '불법거래 종류(날짜)'\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: '불법 거래량'\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n    \r\n        })\r\n    }, [selectedData.continent, selectedData.date]);\r\n\r\n    return <canvas id=\"myChart\"></canvas>\r\n}","C:\\Users\\rlatj\\Desktop\\현이폴더\\DarkWeb\\DarkWebCrawling\\frontend\\src\\javascripts\\DataSearch.js",["113","114","115","116","117"],"import { useSelector } from 'react-redux';\r\n\r\n// component 목록\r\nimport DataTable from '../components/DataTable';\r\nimport LineGraph from '../components/LineGraph';\r\n\r\n// json 파일 목록\r\nimport data from \"../datafile/data\";\r\nimport data2 from \"../datafile/data2\";\r\nimport data3 from \"../datafile/data3\";\r\nimport data4 from \"../datafile/data4\";\r\n\r\nexport function DataSearch() {\r\n   \r\n    const selectedData = useSelector((store) => store.search);\r\n   \r\n    let weaponJson = JSON.stringify(data);\r\n    let weaponObj = JSON.parse(weaponJson);\r\n\r\n    let drugJson = JSON.stringify(data2);\r\n    let drugObj = JSON.parse(drugJson);\r\n\r\n    let hackJson = JSON.stringify(data3);\r\n    let hackObj = JSON.parse(hackJson);\r\n\r\n    let pornoJson = JSON.stringify(data4);\r\n    let pornoObj = JSON.parse(pornoJson);\r\n\r\n    const totalDataArray = [weaponObj, drugObj, hackObj, pornoObj];\r\n    \r\n    let year = String(new Date().getFullYear());\r\n\r\n    let month = new Date().getMonth() + 1;\r\n    month = month >= 10 ? String(month) : '0' + month;\r\n    \r\n    let day = new Date().getDate(); \r\n    day = day >= 10 ? String(day) : '0' + day;\r\n\r\n    let whatToday = new Date().getDay();\r\n    let weekStartDay = 0;\r\n    let weekEndDay = 0;\r\n    // 이번주의 첫번째 날과 마지막날을 구하는 것.\r\n    weekStartDay = String(Number(day) - whatToday);\r\n    weekEndDay = String(Number(day) + (6 - whatToday));\r\n\r\n    let tableDataArray = [];\r\n    let graphDataArray = [];\r\n    let totalDataCnt = 0 ;\r\n    let totalDataPastCnt = 0;\r\n    let totalDataGrowthRate = 0;\r\n\r\n    let pastDay = '';\r\n    let nowDay = '';\r\n\r\n    for(let dataKind of totalDataArray){\r\n\r\n        let dataCnt = 0;\r\n        let dataPastCnt = 0;\r\n        let dataGrowthRate = 0;\r\n        \r\n        if(selectedData.date === 'Year') {\r\n            for(let searchKey of dataKind){\r\n                if(selectedData.continent === 'All') {\r\n                    if(Number(searchKey.Date.substr(0,4)) === Number(year)) {\r\n                        dataCnt++;   \r\n                    }\r\n                    else if(Number(searchKey.Date.substr(0,4)) === (Number(year) - 1)){\r\n                        dataPastCnt++;\r\n                    } \r\n                }\r\n                else {\r\n                    if(Number(searchKey.Date.substr(0,4)) === Number(year) && searchKey.country === selectedData.continent) {\r\n                        dataCnt++;   \r\n                    }\r\n                    else if(Number(searchKey.Date.substr(0,4)) === (Number(year) - 1) && searchKey.country === selectedData.continent){\r\n                        dataPastCnt++;\r\n                    } \r\n                }\r\n            }\r\n            pastDay = String(Number(year) - 1);\r\n            nowDay = year;\r\n            dataGrowthRate = (dataCnt - dataPastCnt) / dataPastCnt * 100;\r\n            totalDataCnt += dataCnt;\r\n            totalDataPastCnt += dataPastCnt;\r\n        }\r\n        else if (selectedData.date === 'Month') {\r\n    \r\n            let tmpYear = 0;\r\n            let yearMonth = Number(year + month);\r\n            let yearPastMonth = yearMonth - 1;\r\n    \r\n            // 만약 이번달이 1월달이면 전년도 12월달 데이터를 가져오게하기.\r\n            if(month === '01') {\r\n                tmpYear = Number(year);\r\n                tmpYear--;\r\n                tmpYear = String(tmpYear);\r\n                yearPastMonth = Number(tmpYear + '12');\r\n            }\r\n            \r\n            for(let searchKey of dataKind){\r\n                if(selectedData.continent === 'All') {\r\n                    if(Number(searchKey.Date.substr(0,6)) === yearMonth) {\r\n                        dataCnt++;   \r\n                    }\r\n                    else if(Number(searchKey.Date.substr(0,6)) === yearPastMonth){\r\n                        dataPastCnt++;\r\n                    } \r\n                }\r\n                else {\r\n                    if(Number(searchKey.Date.substr(0,6)) === yearMonth && searchKey.country === selectedData.continent) {\r\n                        dataCnt++;   \r\n                    }\r\n                    else if(Number(searchKey.Date.substr(0,6)) === yearPastMonth && searchKey.country === selectedData.continent){\r\n                        dataPastCnt++;\r\n                    } \r\n                }\r\n               \r\n            }\r\n            pastDay = String(yearPastMonth);\r\n            nowDay = String(yearMonth);\r\n            dataGrowthRate = (dataCnt - dataPastCnt) / dataPastCnt * 100;\r\n            totalDataCnt += dataCnt;\r\n            totalDataPastCnt += dataPastCnt;\r\n        }\r\n        else if (selectedData.date === 'Week') {\r\n            let monthLastDay = String(new Date(year, month, 0).getDate());\r\n            let tmpMonth = Number(month);\r\n            let tmpYear = Number(year);\r\n            let startDay = '';\r\n            let endDay = '';\r\n            let startPastDay = '';\r\n            let endPastDay = '';\r\n            \r\n            startDay = Number(year + month + weekStartDay);\r\n            endDay = Number(year + month + weekEndDay);\r\n            startPastDay = Number(year + month + String(Number(weekStartDay) - 7));\r\n            endPastDay = Number(year + month + String(Number(weekEndDay) - 7));\r\n    \r\n            if(Number(weekStartDay) < 0 ) {\r\n                tmpMonth--;\r\n                let monthPastLastDay = String(new Date(year, month - 1, 0).getDate());\r\n                if(tmpMonth < 1) {\r\n                    tmpYear--;\r\n                    tmpMonth = 12\r\n                    monthPastLastDay = '31';\r\n                    tmpMonth = String(tmpMonth);\r\n                    weekStartDay = String(Number(monthPastLastDay) + (Number(weekStartDay) + 1));\r\n                    startDay = Number(tmpYear + tmpMonth + weekStartDay);\r\n                    startPastDay = Number(tmpYear + tmpMonth + String(Number(weekStartDay) - 7));\r\n                }\r\n                tmpMonth = String(tmpMonth);\r\n                weekStartDay = String(Number(monthPastLastDay) + (Number(weekStartDay) + 1));\r\n    \r\n                startDay = Number(year + tmpMonth + weekStartDay);\r\n                startPastDay = Number(year + tmpMonth + String(Number(weekStartDay) - 7));\r\n    \r\n            }\r\n    \r\n            if(Number(weekEndDay) > Number(monthLastDay)){\r\n                tmpMonth++;\r\n                if(tmpMonth > 12) {\r\n                    tmpYear++;\r\n                    tmpMonth = 1\r\n                    tmpMonth = String(tmpMonth);\r\n                    weekEndDay = String(Number(weekEndDay) - Number(monthLastDay));\r\n                    endDay = Number(tmpYear + tmpMonth + weekEndDay);\r\n                    endPastDay = Number(tmpYear + tmpMonth + String(Number(weekEndDay) - 7));\r\n                }\r\n                tmpMonth = String(tmpMonth);\r\n                weekEndDay = String(Number(weekEndDay) - Number(monthLastDay));\r\n    \r\n                endDay = Number(year + tmpMonth + weekEndDay);\r\n                endPastDay = Number(year + tmpMonth + String(Number(weekEndDay) - 7));\r\n            }\r\n           \r\n            for(let searchKey of dataKind){\r\n                if(selectedData.continent === 'All') {\r\n                    if(Number(searchKey.Date) >= startDay && Number(searchKey.Date) <= endDay) {\r\n                        dataCnt++;   \r\n                    }\r\n                    else if(Number(searchKey.Date) >= startPastDay && Number(searchKey.Date) <= endPastDay){\r\n                        dataPastCnt++;\r\n                    } \r\n                }\r\n                else {\r\n                    if(Number(searchKey.Date) >= startDay && Number(searchKey.Date) <= endDay  && searchKey.country === selectedData.continent) {\r\n                        dataCnt++;   \r\n                    }\r\n                    else if(Number(searchKey.Date) >= startPastDay && Number(searchKey.Date) <= endPastDay && searchKey.country === selectedData.continent){\r\n                        dataPastCnt++;\r\n                    } \r\n                }\r\n                \r\n            }\r\n            pastDay = String(startPastDay) + ' ~ ' + String(endPastDay);\r\n            nowDay = String(startDay) + ' ~ ' + String(endDay);\r\n            dataGrowthRate = (dataCnt - dataPastCnt) / dataPastCnt * 100;\r\n            totalDataCnt += dataCnt;\r\n            totalDataPastCnt += dataPastCnt;\r\n        }\r\n        else {\r\n    \r\n            let yearMonthDay = Number(year + month + day);\r\n            let yearMonthPastDay = yearMonthDay - 1;\r\n            let tmpYear = 0;\r\n            let tmpMonth = 0;\r\n            let tmpDay = 0;\r\n    \r\n            if((month === '01') && (day === '01')){\r\n                tmpYear = Number(year);\r\n                tmpYear--;\r\n                tmpYear = String(tmpYear);\r\n                tmpMonth = '12';\r\n                tmpDay = '31';\r\n    \r\n                yearMonthPastDay = Number(tmpYear + tmpMonth + tmpDay);\r\n            }\r\n            else if(day === '01'){\r\n    \r\n                // 월별 일수, 2월은 윤년 계산해서 넣기.\r\n                let numberOfDaysPerMonth = [31, 0, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n                numberOfDaysPerMonth[1] = (year % 4 == 0 && year % 100 != 0 || year % 400 == 0) ? 29 : 28;\r\n            \r\n                tmpMonth = Number(month);\r\n                tmpMonth--;\r\n                tmpDay = numberOfDaysPerMonth[tmpMonth - 1];\r\n                tmpMonth = String(tmpMonth);\r\n                tmpDay = String(tmpDay);\r\n    \r\n                yearMonthPastDay = Number(year + tmpMonth + tmpDay);\r\n    \r\n            }\r\n           \r\n            for(let searchKey of dataKind){\r\n                if(selectedData.continent === 'All') {\r\n                    if(Number(searchKey.Date) === yearMonthDay) {\r\n                        dataCnt++;   \r\n                    }\r\n                    else if(Number(searchKey.Date) === yearMonthPastDay){\r\n                        dataPastCnt++;\r\n                    } \r\n                }\r\n                else {\r\n                    if(Number(searchKey.Date) === yearMonthDay  && searchKey.country === selectedData.continent) {\r\n                        dataCnt++;   \r\n                    }\r\n                    else if(Number(searchKey.Date) === yearMonthPastDay && searchKey.country === selectedData.continent){\r\n                        dataPastCnt++;\r\n                    } \r\n                }\r\n                \r\n            }\r\n            pastDay = String(yearMonthPastDay);\r\n            nowDay = String(yearMonthDay);\r\n            dataGrowthRate = (dataCnt - dataPastCnt) / dataPastCnt * 100;\r\n            totalDataCnt += dataCnt;\r\n            totalDataPastCnt += dataPastCnt;\r\n        }\r\n        tableDataArray.push(dataCnt);\r\n        tableDataArray.push(dataGrowthRate);\r\n\r\n        graphDataArray.push(dataPastCnt);\r\n        graphDataArray.push(dataCnt);\r\n        \r\n    }\r\n    totalDataGrowthRate = (totalDataCnt - totalDataPastCnt) / totalDataPastCnt * 100;\r\n    tableDataArray.unshift(totalDataGrowthRate);\r\n    tableDataArray.unshift(totalDataCnt);\r\n\r\n    graphDataArray.unshift(totalDataCnt);\r\n    graphDataArray.unshift(totalDataPastCnt);\r\n\r\n    DataTable(tableDataArray);\r\n    LineGraph(graphDataArray, pastDay, nowDay);\r\n}\r\n",{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":2,"column":26,"nodeType":"124","messageId":"125","endLine":2,"endColumn":32},{"ruleId":"122","severity":1,"message":"126","line":2,"column":34,"nodeType":"124","messageId":"125","endLine":2,"endColumn":41},{"ruleId":"122","severity":1,"message":"127","line":2,"column":43,"nodeType":"124","messageId":"125","endLine":2,"endColumn":48},{"ruleId":"122","severity":1,"message":"128","line":2,"column":50,"nodeType":"124","messageId":"125","endLine":2,"endColumn":56},{"ruleId":"129","severity":1,"message":"130","line":37,"column":5,"nodeType":"131","endLine":37,"endColumn":40},{"ruleId":"122","severity":1,"message":"123","line":2,"column":26,"nodeType":"124","messageId":"125","endLine":2,"endColumn":32},{"ruleId":"122","severity":1,"message":"126","line":2,"column":34,"nodeType":"124","messageId":"125","endLine":2,"endColumn":41},{"ruleId":"122","severity":1,"message":"127","line":2,"column":43,"nodeType":"124","messageId":"125","endLine":2,"endColumn":48},{"ruleId":"122","severity":1,"message":"128","line":2,"column":50,"nodeType":"124","messageId":"125","endLine":2,"endColumn":56},{"ruleId":"129","severity":1,"message":"130","line":37,"column":5,"nodeType":"131","endLine":37,"endColumn":40},{"ruleId":"122","severity":1,"message":"132","line":1,"column":10,"nodeType":"124","messageId":"125","endLine":1,"endColumn":13},{"ruleId":"122","severity":1,"message":"133","line":1,"column":15,"nodeType":"124","messageId":"125","endLine":1,"endColumn":23},{"ruleId":"122","severity":1,"message":"134","line":1,"column":25,"nodeType":"124","messageId":"125","endLine":1,"endColumn":29},{"ruleId":"135","severity":1,"message":"136","line":42,"column":52,"nodeType":"137","messageId":"138","endLine":42,"endColumn":54},{"ruleId":"139","severity":1,"message":"140","line":59,"column":8,"nodeType":"141","endLine":59,"endColumn":24,"suggestions":"142"},{"ruleId":"139","severity":1,"message":"143","line":80,"column":8,"nodeType":"141","endLine":80,"endColumn":51,"suggestions":"144"},{"ruleId":"135","severity":1,"message":"136","line":222,"column":53,"nodeType":"137","messageId":"138","endLine":222,"endColumn":55},{"ruleId":"145","severity":1,"message":"146","line":222,"column":58,"nodeType":"147","messageId":"148","endLine":222,"endColumn":60},{"ruleId":"135","severity":1,"message":"149","line":222,"column":72,"nodeType":"137","messageId":"138","endLine":222,"endColumn":74},{"ruleId":"145","severity":1,"message":"146","line":222,"column":77,"nodeType":"147","messageId":"148","endLine":222,"endColumn":79},{"ruleId":"135","severity":1,"message":"136","line":222,"column":91,"nodeType":"137","messageId":"138","endLine":222,"endColumn":93},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Bar' is defined but never used.","'Doughnut' is defined but never used.","'Line' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedData.date'. Either include it or remove the dependency array.","ArrayExpression",["152"],"React Hook useEffect has missing dependencies: 'graphDataArray', 'nowDay', and 'pastDay'. Either include them or remove the dependency array.",["153"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [selectedData.date, tableDataArray]",{"range":"158","text":"159"},"Update the dependencies array to be: [graphDataArray, nowDay, pastDay, selectedData.continent, selectedData.date]",{"range":"160","text":"161"},[2204,2220],"[selectedData.date, tableDataArray]",[2910,2953],"[graphDataArray, nowDay, pastDay, selectedData.continent, selectedData.date]"]